import sys
import os
import json
from PyPDF2 import PdfReader
from pdfminer.high_level import extract_text

def analyze_pdf(pdf_path):
    """
    Analyze the PDF file and return a summary of its contents.
    Modify this function to include any specific analysis you want.
    """
    analysis_result = {
        "file_name": os.path.basename(pdf_path),
        "file_size": os.path.getsize(pdf_path),
        "is_encrypted": False,
        "page_count": 0,
        "text_length": 0,
        "keywords": [],
    }

    try:
        with open(pdf_path, 'rb') as f:
            reader = PdfReader(f)
            analysis_result["is_encrypted"] = reader.is_encrypted
            analysis_result["page_count"] = len(reader.pages)
            
            # Extract text using pdfminer
            text = extract_text(pdf_path)
            analysis_result["text_length"] = len(text)

            # Add custom analysis or extract features here (e.g., JavaScript, embedded objects)
            # For example, you could add code to extract keywords or perform additional checks.
    except Exception as e:
        analysis_result["error"] = str(e)
    
    return analysis_result

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: python analyze_pdf.py <pdf_path>")
        sys.exit(1)

    pdf_path = sys.argv[1]
    if not os.path.exists(pdf_path):
        print(f"Error: File '{pdf_path}' does not exist.")
        sys.exit(1)

    # Perform PDF analysis
    result = analyze_pdf(pdf_path)

    # Output the result as JSON (to be captured by Django)
    print(json.dumps(result, indent=4))

